# version: "3.9"

services:
  web:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    user: "1000:1000" #match your linux/wsl with uid:gid   #check with id -u
    container_name: maison
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      
    volumes:
      - ../backend:/backend
    command: > 
      sh -c "sleep 10 && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    working_dir: /backend
    networks:
      - app-network
    restart: unless-stopped
  
  # frontend:
  #   build:
  #     context: ..
  #     dockerfile: frontend/Dockerfile
  #   container_name: maison_frontend
  #   ports:
  #     - "3000:3000"
  #   restart: unless-stopped

    

  db:
    image: postgres:15
    container_name: postgres_db
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  

volumes:
  postgres_data:

networks:
  app-network: