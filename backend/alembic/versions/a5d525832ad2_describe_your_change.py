"""describe your change

Revision ID: a5d525832ad2
Revises: d5724958049f
Create Date: 2025-07-18 05:05:43.797076

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a5d525832ad2'
down_revision: Union[str, Sequence[str], None] = 'd5724958049f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('drivers_license_number_key'), 'drivers', type_='unique')
    op.drop_constraint(op.f('unique_driver'), 'drivers', type_='unique')
    op.create_unique_constraint('unique_driver', 'drivers', ['email', 'tenant_id', 'license_number'])
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq')"),
               existing_nullable=False)
    op.alter_column('tenants_settings', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq')"),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tenants_settings', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq'::regclass)"),
               existing_nullable=False)
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq'::regclass)"),
               existing_nullable=False)
    op.drop_constraint('unique_driver', 'drivers', type_='unique')
    op.create_unique_constraint(op.f('unique_driver'), 'drivers', ['email', 'tenant_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('drivers_license_number_key'), 'drivers', ['license_number'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
