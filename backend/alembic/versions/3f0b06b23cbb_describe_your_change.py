"""describe your change

Revision ID: 3f0b06b23cbb
Revises: 6761f9520c17
Create Date: 2025-07-19 05:07:19.062853

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3f0b06b23cbb'
down_revision: Union[str, Sequence[str], None] = '6761f9520c17'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_vehicle_models_seating_capacity'), table_name='vehicle_models')
    op.drop_index(op.f('ix_vehicle_models_tenant_id'), table_name='vehicle_models')
    op.drop_index(op.f('ix_vehicle_models_vehicle_category'), table_name='vehicle_models')
    op.drop_index(op.f('ix_vehicle_models_vehicle_id'), table_name='vehicle_models')
    op.drop_table('vehicle_models')
    op.add_column('drivers', sa.Column('driver_type', sa.String(), nullable=False))
    op.add_column('drivers', sa.Column('driver_token', sa.Integer(), nullable=False))
    op.add_column('drivers', sa.Column('is_registered', sa.String(), nullable=False))
    op.alter_column('drivers', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('drivers', 'completed_rides',
               existing_type=sa.VARCHAR(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('drivers', 'vehicle_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq')"),
               existing_nullable=False)
    op.alter_column('tenants_settings', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq')"),
               existing_nullable=False)
    op.alter_column('vehicle_config', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq')"),
               existing_nullable=False)
    op.add_column('vehicles', sa.Column('vehicle_name', sa.String(length=200), nullable=False))
    op.add_column('vehicles', sa.Column('vehicle_make', sa.String(length=200), nullable=False))
    op.add_column('vehicles', sa.Column('vehicle_year', sa.Integer(), nullable=True))
    op.drop_column('vehicles', 'name')
    op.drop_column('vehicles', 'model')
    op.drop_column('vehicles', 'year')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vehicles', sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('vehicles', sa.Column('model', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('vehicles', sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.drop_column('vehicles', 'vehicle_year')
    op.drop_column('vehicles', 'vehicle_make')
    op.drop_column('vehicles', 'vehicle_name')
    op.alter_column('vehicle_config', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq'::regclass)"),
               existing_nullable=False)
    op.alter_column('tenants_settings', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq'::regclass)"),
               existing_nullable=False)
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.text("nextval('id_seq'::regclass)"),
               existing_nullable=False)
    op.alter_column('drivers', 'vehicle_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('drivers', 'completed_rides',
               existing_type=sa.VARCHAR(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('drivers', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('drivers', 'is_registered')
    op.drop_column('drivers', 'driver_token')
    op.drop_column('drivers', 'driver_type')
    op.create_table('vehicle_models',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('seating_capacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_flat_rate', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text('0.0'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('vehicle_models_tenant_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name=op.f('vehicle_models_vehicle_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('vehicle_models_pkey'))
    )
    op.create_index(op.f('ix_vehicle_models_vehicle_id'), 'vehicle_models', ['vehicle_id'], unique=True)
    op.create_index(op.f('ix_vehicle_models_vehicle_category'), 'vehicle_models', ['vehicle_category'], unique=False)
    op.create_index(op.f('ix_vehicle_models_tenant_id'), 'vehicle_models', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_vehicle_models_seating_capacity'), 'vehicle_models', ['seating_capacity'], unique=False)
    # ### end Alembic commands ###
